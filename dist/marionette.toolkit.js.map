{"version":3,"file":"marionette.toolkit.js","sources":["../src/mixins/state.js","../src/mixins/child-apps.js","../src/mixins/event-listeners.js","../src/mixins/view-events.js","../src/app.js","../src/component.js","../src/marionette.toolkit.js"],"sourcesContent":["import _ from 'underscore';\nimport Backbone from 'backbone';\n\nconst ClassOptions = [\n  'StateModel',\n  'stateEvents'\n];\n\n/**\n * This provides methods used for keeping state using a Backbone.Model. It's meant to\n * be used with either a Marionette.MnObject or Backbone.View.\n *\n * @mixin\n */\nexport default {\n\n  /**\n   * The model class for _stateModel.\n   * @type {Backbone.Model}\n   * @default Backbone.Model\n   */\n  StateModel: Backbone.Model,\n\n  /**\n   * @public\n   * @method initState\n   * @param {Object} [options] - Settings for the StateMixin.\n   * @param {Object} [options.stateEvents] - Event hash bound from _stateModel to StateMixin.\n   * @param {Backbone.Model} [options.StateModel] - Model class for _stateModel.\n   */\n  initState(options = {}) {\n    this._initState(options);\n    this.delegateStateEvents();\n\n    return this;\n  },\n\n  /**\n   * @private\n   * @method _initState\n   * @param {Object} [options] - Settings for the StateMixin.\n   */\n  _initState(options) {\n    // Make defaults available to this\n    this.mergeOptions(options, ClassOptions);\n\n    // Remove event handlers from previous state\n    this._removeEventHandlers();\n\n    const StateModel = this._getStateModel(options);\n\n    this._stateModel = new StateModel(options.state);\n\n    this._setEventHandlers();\n  },\n\n  /**\n   * Bind events from the _stateModel defined in stateEvents hash\n   *\n   * @public\n   * @method delegateStateEvents\n   */\n  delegateStateEvents() {\n    this.undelegateStateEvents();\n    this.bindEvents(this._stateModel, _.result(this, 'stateEvents'));\n\n    return this;\n  },\n\n  /**\n   * Unbind all entity events on _stateModel\n   *\n   * @public\n   * @method undelegateStateEvents\n   */\n  undelegateStateEvents() {\n    this.unbindEvents(this._stateModel);\n\n    return this;\n  },\n\n  /**\n   * Setup destroy event handle\n   *\n   * @private\n   * @method _setEventHandlers\n   */\n  _setEventHandlers() {\n    this.on('destroy', this._destroyState);\n  },\n\n  /**\n   * Clean up destroy event handler, remove any listeners on _stateModel\n   *\n   * @private\n   * @method _removeEventHandlers\n   */\n  _removeEventHandlers() {\n    if(!this._stateModel) return;\n\n    this.undelegateStateEvents();\n    this._stateModel.stopListening();\n    this.off('destroy', this._destroyState);\n  },\n\n\n  /**\n   * Get the StateMixin StateModel class.\n   * Checks if the `StateModel` is a model class (the common case)\n   * Then check if it's a function (which we assume that returns a model class)\n   *\n   * @private\n   * @method _getStateModel\n   * @param {Object} [options] - Options that can be used to determine the StateModel.\n   * @returns {Backbone.Model}\n   */\n  _getStateModel(options) {\n    if(this.StateModel.prototype instanceof Backbone.Model || this.StateModel === Backbone.Model) {\n      return this.StateModel;\n    } else if(_.isFunction(this.StateModel)) {\n      return this.StateModel.call(this, options);\n    }\n\n    throw new Error('\"StateModel\" must be a model class or a function that returns a model class');\n  },\n\n  /**\n   * Set a property on the _stateModel.\n   *\n   * @public\n   * @method setState\n   * @param {String|Object} key - Attribute name or Hash of any number of key value pairs.\n   * @param {*} [value] - Attribute value if key is String, replaces options param otherwise.\n   * @param {Object} [options] - Backbone.Model options.\n   * @returns {Backbone.Model} - The _stateModel\n   */\n  setState() {\n    return this._stateModel.set.apply(this._stateModel, arguments);\n  },\n\n\n  /**\n   *  Reset _stateModel to defined defaults\n   *\n   * @public\n   * @method resetStateDefaults\n   * @param {Object} [newState] - Hash of any number of key value pairs.\n   * @returns {Backbone.Model|*} - The _stateModel or the attribute value of the _stateModel\n   */\n  resetStateDefaults() {\n    const defaults = _.result(this._stateModel, 'defaults');\n\n    return this._stateModel.set(defaults);\n  },\n\n  /**\n   * Get a property from the _stateModel, or return the _stateModel\n   *\n   * @public\n   * @method getState\n   * @param {String} [attr] - Attribute name of stateModel.\n   * @returns {Backbone.Model|*} - The _stateModel or the attribute value of the _stateModel\n   */\n  getState(attr) {\n    if(!attr) {\n      return this._stateModel;\n    }\n\n    return this._stateModel.get.apply(this._stateModel, arguments);\n  },\n\n  /**\n   * Toggle a property on the _stateModel.\n   *\n   * @public\n   * @method toggleState\n   * @param {String} attr - Attribute name of stateModel.\n   * @param {val} [value] - Attribute value.\n   * @returns {Backbone.Model} - The _stateModel or attribute value.\n   */\n  toggleState(attr, val) {\n    if(arguments.length > 1) return this._stateModel.set(attr, !!val);\n\n    return this._stateModel.set(attr, !this._stateModel.get(attr));\n  },\n\n  /**\n   * Check if _stateModel has a property\n   *\n   * @public\n   * @method hasState\n   * @param {String} [attr] - Attribute name of stateModel.\n   * @returns {Boolean}\n   */\n  hasState(attr) {\n    return this._stateModel.has(attr);\n  },\n\n  /**\n   * Clean up any listeners on the _stateModel.\n   *\n   * @private\n   * @method _destroyState\n   */\n  _destroyState() {\n    this._stateModel.stopListening();\n  }\n};\n","import _ from 'underscore';\n\nconst ClassOptions = [\n  'childApps',\n  'childAppOptions'\n];\n\n/**\n * This provides methods used for \"App Manager\" functionality - the adding and removing child `App`s. It's not meant to\n * be used directly.\n *\n * @mixin\n */\nexport default {\n\n  /**\n   * @private\n   * @method _initChildApps\n   * @constructs ChildApps\n   * @param {Object} [options] - Settings for the ChildApps.\n   * @param {Object} [options.childApps] - Hash for setting up child apps.\n   * @param {Object} [options.childAppOptions] - Hash of options passed to every child app.\n   *\n   * ```js\n   * childApps: {\n   *   appName: {\n   *     AppClass: MyChildAppClass,\n   *     fooOption: true,\n   *     startWithParent: true\n   *   },\n   *   barApp: MyOtherChildAppClass\n   * }\n   * ```\n   */\n  _initChildApps(options = {}) {\n    this._childApps = {};\n\n    this.mergeOptions(options, ClassOptions);\n\n    let childApps = this.childApps;\n\n    if(childApps) {\n      if(_.isFunction(childApps)) {\n        childApps = childApps.call(this, options);\n      }\n\n      this.addChildApps(childApps);\n    }\n  },\n\n  /**\n   * Finds `regionName` and `getOptions` for the childApp\n   *\n   * @private\n   * @method _getChildStartOpts\n   */\n  _getChildStartOpts(childApp) {\n    const tkOpts = childApp._tkOpts || {};\n\n    const opts = {\n      region: this.getRegion(tkOpts.regionName)\n    };\n\n    _.each(tkOpts.getOptions, opt => {\n      opts[opt] = this.getOption(opt);\n    });\n\n    return opts;\n  },\n\n  /**\n   * Starts a `childApp`\n   *\n   * @private\n   * @method _startChildApp\n   */\n  _startChildApp(childApp, options) {\n    const opts = this._getChildStartOpts(childApp);\n    return childApp.start(_.extend(opts, options));\n  },\n\n  /**\n   * Handles explicit boolean values of restartWithParent\n   * restartWithParent === false does nothing\n   *\n   * @private\n   * @method _shouldStartWithRestart\n   */\n  _shouldActWithRestart(childApp, action) {\n    if(!this._isRestarting) return true;\n    const restartWithParent = _.result(childApp, 'restartWithParent');\n    if(restartWithParent === true) return true;\n    if(restartWithParent !== false && _.result(childApp, action)) return true;\n  },\n\n  /**\n   * Starts `childApps` if allowed by child\n   *\n   * @private\n   * @method _startChildApps\n   */\n  _startChildApps() {\n    const action = 'startWithParent';\n    _.each(this._childApps, childApp => {\n      if(!this._shouldActWithRestart(childApp, action)) return;\n      if(!this._isRestarting && !_.result(childApp, action)) return;\n      this._startChildApp(childApp);\n    });\n  },\n\n  /**\n   * Stops `childApps` if allowed by child\n   *\n   * @private\n   * @method _stopChildApps\n   */\n  _stopChildApps() {\n    const action = 'stopWithParent';\n    _.each(this._childApps, childApp => {\n      if(!this._shouldActWithRestart(childApp, action)) return;\n      if(!this._isRestarting && !_.result(childApp, action)) return;\n      childApp.stop();\n    });\n  },\n\n  /**\n   * Starts `childApp`\n   *\n   * @param {String} appName - Name of childApp to start\n   * @param {Object} options - Start options for app\n   * @public\n   * @method startChildApp\n   */\n  startChildApp(appName, options) {\n    const childApp = this.getChildApp(appName);\n    return this._startChildApp(childApp, options);\n  },\n\n  /**\n   * Stops `childApp`\n   *\n   * @param {String} appName - Name of childApp to stop\n   * @param {Object} options - Stop options for app\n   * @public\n   * @method stopChildApp\n   */\n  stopChildApp(appName, options) {\n    return this.getChildApp(appName).stop(options);\n  },\n\n  /**\n   * Destroys `childApps` if allowed by child\n   *\n   * @private\n   * @method _destroyChildApps\n   */\n  _destroyChildApps() {\n    _.each(this._childApps, function(childApp) {\n      if(!_.result(childApp, 'preventDestroy')) {\n        childApp.destroy();\n      }\n    });\n  },\n\n  /**\n   * Internal helper to instantiate and `App` from on `Object`\n   *\n   * @private\n   * @method _buildAppFromObject\n   * @param {Object} appConfig - `AppClass` and any other option for the `App`\n   * @returns {App}\n   */\n  _buildAppFromObject(appConfig) {\n    const AppClass = appConfig.AppClass;\n    const options = _.omit(appConfig, 'AppClass', 'regionName', 'getOptions');\n\n    const app = this.buildApp(AppClass, options);\n\n    app._tkOpts = _.pick(appConfig, 'regionName', 'getOptions');\n\n    return app;\n  },\n\n  /**\n   * Helper for building an App and return it\n   *\n   * @private\n   * @method _buildApp\n   * @param {App} AppClass - An App Class\n   * @param {Object} AppClass - Optionally passed as an appConfig Object\n   * @param {Object} [options] - options for the AppClass\n   * @returns {App}\n   */\n  _buildApp(AppClass, options) {\n    if(_.isFunction(AppClass)) {\n      return this.buildApp(AppClass, options);\n    }\n    if(_.isObject(AppClass)) {\n      return this._buildAppFromObject(AppClass);\n    }\n  },\n\n  /**\n   * Build an App and return it\n   * Override for dynamic App building\n   *\n   * @public\n   * @method buildApp\n   * @param {App} [AppClass] - An App Class\n   * @param {Object} [options] - options for the AppClass\n   * @returns {App}\n   */\n  buildApp(AppClass, options) {\n    // options on childApp definition supersede childAppOptions\n    options = _.extend({}, this.childAppOptions, options);\n\n    return new AppClass(options);\n  },\n\n  /**\n   * Internal helper to verify `appName` is unique and not in use\n   *\n   * @private\n   * @method _ensureAppIsUnique\n   * @param {String} appName - Name of app to test\n   * @throws DuplicateChildAppError - Thrown if `App` already has an `appName` registered\n   */\n  _ensureAppIsUnique(appName) {\n    if(this._childApps[appName]) {\n      throw new Error(`A child App with name \"${ appName }\" has already been added.`);\n    }\n  },\n\n  /**\n   * Add child `App`s to this `App`\n   *\n   * @public\n   * @method addChildApps\n   * @param {Object} childApps - Hash of names and `AppClass` or `appConfig`\n   */\n  addChildApps(childApps) {\n    _.each(childApps, _.bind(function(childApp, appName) {\n      this.addChildApp(appName, childApp);\n    }, this));\n  },\n\n  /**\n   * Build's childApp and registers it with this App\n   * Starts the childApp, if this app is running and child is `startWithParent`\n   *\n   * @public\n   * @method addChildApp\n   * @param {String} appName - Name of App to register\n   * @param {App} AppClass - An App Class\n   * @param {Object} AppClass - Optionally passed as an appConfig Object\n   * @param {Object} [options] - options for the AppClass\n   * @throws AddChildAppError - Thrown if no childApp could be built from params\n   * @returns {App}\n   */\n  addChildApp(appName, AppClass, options) {\n    this._ensureAppIsUnique(appName);\n\n    const childApp = this._buildApp(AppClass, options);\n\n    if(!childApp) {\n      throw new Error('App build failed.  Incorrect configuration.');\n    }\n\n    childApp._name = appName;\n\n    this._childApps[appName] = childApp;\n\n    // When the app is destroyed remove the cached app.\n    // Listener setup relative to the childApp's running state (using _on)\n    childApp._on('destroy', _.partial(this._removeChildApp, appName), this);\n\n    if(this.isRunning() && _.result(childApp, 'startWithParent')) {\n      this._startChildApp(childApp);\n    }\n\n    return childApp;\n  },\n\n  /**\n   * Returns registered child `App`s name\n   *\n   * @public\n   * @method getName\n   * @returns {String}\n   */\n  getName() {\n    return this._name;\n  },\n\n\n  /**\n   * Returns registered child `App`s array\n   *\n   * @public\n   * @method getChildApps\n   * @returns {Array}\n   */\n  getChildApps() {\n    return _.clone(this._childApps);\n  },\n\n  /**\n   * Returns registered child `App`\n   *\n   * @public\n   * @method getChildApp\n   * @param {String} appName - Name of App to retrieve\n   * @returns {App}\n   */\n  getChildApp(appName) {\n    return this._childApps[appName];\n  },\n\n  /**\n   * Internal helper.  Unregisters child `App`\n   *\n   * @private\n   * @method _removeChildApp\n   * @param {String} appName - Name of App to unregister\n   * @returns {App}\n   */\n  _removeChildApp(appName) {\n    delete this._childApps[appName]._name;\n    delete this._childApps[appName];\n  },\n\n  /**\n   * Removes all childApps and returns them.\n   * The return is useful if any app is using `preventDestroy`\n   *\n   * @public\n   * @method removeChildApps\n   * @returns {Array}\n   */\n  removeChildApps() {\n    const childApps = this.getChildApps();\n\n    _.each(this._childApps, _.bind(function(childApp, appName) {\n      this.removeChildApp(appName);\n    }, this));\n\n    return childApps;\n  },\n\n  /**\n   * Destroys or removes registered child `App` by name\n   * depending on `preventDestroy`\n   *\n   * @public\n   * @method removeChildApp\n   * @param {String} appName - Name of App to destroy\n   * @param {Object} [options.preventDestroy] - Flag to remove but prevent App destroy\n   * @returns {App}\n   */\n  removeChildApp(appName, options) {\n    options = _.extend({}, options);\n\n    const childApp = this.getChildApp(appName);\n\n    if(!childApp) {\n      return;\n    }\n\n    // if preventDestroy simply unregister the child app\n    if(options.preventDestroy || _.result(childApp, 'preventDestroy')) {\n      this._removeChildApp(appName);\n    } else {\n      childApp.destroy();\n    }\n\n    return childApp;\n  }\n};\n","import _ from 'underscore';\nimport { MnObject } from 'backbone.marionette';\n\n/**\n * This provides methods used for registering events while App is running and cleans them up at `onStop`. It's not meant to\n * be used directly.\n *\n * @mixin\n */\n\nexport default {\n  /**\n   * Internal method to stop any registered events.\n   *\n   * @private\n   * @method _stopRunningEvents\n   */\n  _stopRunningEvents() {\n    _.each(this._runningEvents, _.bind(function(args) {\n      this.off.apply(this, args);\n    }, this));\n  },\n\n  /**\n   * Internal method to stop any registered listeners.\n   *\n   * @private\n   * @method _stopRunningListeners\n   */\n  _stopRunningListeners() {\n    _.each(this._runningListeningTo, _.bind(function(args) {\n      this.stopListening.apply(this, args);\n    }, this));\n  },\n\n  /**\n   * Overrides `Backbone.Event.on()`\n   * If this `App` is running it will register the event for removal `onStop`\n   *\n   * @public\n   * @method on\n   * @returns {EventListeners}\n   */\n  on() {\n    if(this._isRunning) {\n      this._runningEvents = (this._runningEvents || []);\n      this._runningEvents.push(arguments);\n    }\n\n    return MnObject.prototype.on.apply(this, arguments);\n  },\n\n  /**\n   * Keep a copy of non-running on for internal use\n   *\n   * @private\n   * @method _on\n   * @returns {EventListeners}\n   */\n  _on: MnObject.prototype.on,\n\n  /**\n   * Overrides `Backbone.Event.listenTo()`\n   * If this `App` is running it will register the listener for removal `onStop`\n   *\n   * @public\n   * @method listenTo\n   * @returns {EventListeners}\n   */\n  listenTo() {\n    if(this._isRunning) {\n      this._runningListeningTo = (this._runningListeningTo || []);\n      this._runningListeningTo.push(arguments);\n    }\n    return MnObject.prototype.listenTo.apply(this, arguments);\n  },\n\n  /**\n   * Keep a copy of non-running on for internal use\n   *\n   * @private\n   * @method _listenTo\n   * @returns {EventListeners}\n   */\n  _listenTo: MnObject.prototype.listenTo,\n\n  /**\n   * Overrides `Backbone.Event.listenToOnce()`\n   * If this `App` is running it will register the listener for removal `onStop`\n   *\n   * @public\n   * @method listenToOnce\n   * @returns {EventListeners}\n   */\n  listenToOnce() {\n    if(this._isRunning) {\n      this._runningListeningTo = (this._runningListeningTo || []);\n      this._runningListeningTo.push(arguments);\n    }\n\n    return MnObject.prototype.listenToOnce.apply(this, arguments);\n  }\n};\n","import _ from 'underscore';\n\nexport default {\n  /**\n   * Used as the prefix for events forwarded from\n   * the component's view to the component\n   * @type {String}\n   * @default false\n   */\n  viewEventPrefix: false,\n\n  /**\n   * Constructs hashes and options for view event proxy\n   *\n   * @private\n   * @method _buildEventProxies\n   */\n  _buildEventProxies() {\n    const viewEvents = _.result(this, 'viewEvents') || {};\n    this._viewEvents = this.normalizeMethods(viewEvents);\n    this._viewTriggers = _.result(this, 'viewTriggers') || {};\n    this._viewEventPrefix = _.result(this, 'viewEventPrefix');\n  },\n\n  /**\n   * Proxies the ViewClass's viewEvents to the Component itself\n   * Similar to CollectionView childEvents\n   * (http://marionettejs.com/docs/v2.3.2/marionette.collectionview.html#collectionviews-childevents)\n   *\n   * @private\n   * @method _proxyViewEvents\n   * @param {Mn.View|Mn.CollectionView} view -\n   * The instantiated ViewClass.\n   */\n  _proxyViewEvents(view) {\n    this.listenTo(view, 'all', this._childViewEventHandler);\n  },\n\n  /**\n   * Event handler for view proxy\n   * Similar to CollectionView childEvents\n   * (http://marionettejs.com/docs/v2.3.2/marionette.collectionview.html#collectionviews-childevents)\n   *\n   * @private\n   * @method _childViewEventHandler\n   * @param {String} - event name\n   */\n  _childViewEventHandler(eventName, ...args) {\n    const viewEvents = this._viewEvents;\n\n    if(_.isFunction(viewEvents[eventName])) {\n      viewEvents[eventName].apply(this, args);\n    }\n\n    // use the parent view's proxyEvent handlers\n    const viewTriggers = this._viewTriggers;\n\n    // Call the event with the proxy name on the parent layout\n    if(_.isString(viewTriggers[eventName])) {\n      this.triggerMethod(viewTriggers[eventName], ...args);\n    }\n\n    const prefix = this._viewEventPrefix;\n\n    if(prefix !== false) {\n      const viewEventName = `${ prefix }:${ eventName }`;\n\n      this.triggerMethod(viewEventName, ...args);\n    }\n  }\n};\n","import _ from 'underscore';\nimport { Application } from 'backbone.marionette';\nimport StateMixin from './mixins/state';\nimport ChildAppsMixin from './mixins/child-apps';\nimport EventListenersMixin from './mixins/event-listeners';\nimport ViewEventsMixin from './mixins/view-events';\n\nconst ClassOptions = [\n  'startWithParent',\n  'restartWithParent',\n  'stopWithParent',\n  'startAfterInitialized',\n  'preventDestroy',\n  'StateModel',\n  'stateEvents',\n  'viewEventPrefix',\n  'viewEvents',\n  'viewTriggers'\n];\n\n/**\n * Marionette.Application with an `initialize` / `start` / `stop` / `destroy` lifecycle.\n *\n * @public\n * @class App\n * @memberOf Toolkit\n * @memberOf Marionette\n */\nconst App = Application.extend({\n\n  /**\n   * Internal flag indiciate when `App` has started but has not yet stopped.\n   *\n   * @private\n   * @type {Boolean}\n   * @default false\n   */\n  _isRunning: false,\n\n  /**\n   * Internal flag indiciate when `App` is in the process of stopping then starting.\n   *\n   * @private\n   * @type {Boolean}\n   * @default false\n   */\n  _isRestarting: false,\n\n  /**\n   * Set to true if a parent `App` should not be able to destroy this `App`.\n   *\n   * @type {Boolean|Function}\n   * @default false\n   */\n  preventDestroy: false,\n\n  /**\n   * Set to true if `App` should be started after it is initialized.\n   *\n   * @type {Boolean|Function}\n   * @default false\n   */\n  startAfterInitialized: false,\n\n  /**\n   * Set to true if `App` should be started after its parent starts.\n   *\n   * @type {Boolean|Function}\n   * @default false\n   */\n  startWithParent: false,\n\n  /**\n   * Set to false if `App` should not stop after its parent stops.\n   *\n   * @type {Boolean|Function}\n   * @default true\n   */\n  stopWithParent: true,\n\n\n  /**\n   * Set this to determine if a parent `App` should maintain the child's\n   * lifecycle during a restart.\n   *\n   * @type {Boolean|Function}\n   * @default null\n   */\n  restartWithParent: null,\n\n  /**\n   * @public\n   * @constructs App\n   * @param {Object} [options] - Settings for the App.\n   * @param {Boolean} [options.startWithParent]\n   * @param {Boolean} [options.restartWithParent]\n   * @param {Boolean} [options.stopWithParent]\n   * @param {Boolean} [options.startAfterInitialized]\n   * @param {Boolean} [options.preventDestroy]\n   * @param {Object} [options.state] - Attributes to set on the state model.\n   */\n  constructor(options = {}) {\n    this.mergeOptions(options, ClassOptions);\n\n    this.options = _.extend({}, _.result(this, 'options'), options);\n\n    // ChildAppsMixin\n    this._initChildApps(options);\n\n    Application.call(this, options);\n\n    if(_.result(this, 'startAfterInitialized')) {\n      this.start(options);\n    }\n  },\n\n  /**\n   * Internal helper to verify if `App` has been destroyed\n   *\n   * @private\n   * @method _ensureAppIsIntact\n   * @memberOf App\n   * @throws AppDestroyedError - Thrown if `App` has already been destroyed\n   */\n  _ensureAppIsIntact() {\n    if(this._isDestroyed) {\n      throw new Error('App has already been destroyed and cannot be used.');\n    }\n  },\n\n  /**\n   * Gets the value of internal `_isRunning` flag\n   *\n   * @public\n   * @method isRunning\n   * @memberOf App\n   * @returns {Boolean}\n   */\n  isRunning() {\n    return this._isRunning;\n  },\n\n  /**\n   * Gets the value of internal `_isRestarting` flag\n   *\n   * @public\n   * @method isRestarting\n   * @memberOf App\n   * @returns {Boolean}\n   */\n  isRestarting() {\n    return this._isRestarting;\n  },\n\n  /**\n   * Sets the app lifecycle to running.\n   *\n   * @public\n   * @method start\n   * @memberOf App\n   * @param {Object} [options] - Settings for the App passed through to events\n   * @event App#before:start - passes options\n   * @returns {App}\n   */\n  start(options = {}) {\n    this._ensureAppIsIntact();\n\n    if(this._isRunning) {\n      return this;\n    }\n\n    if(options.region) {\n      this.setRegion(options.region);\n    }\n\n    if(options.view) {\n      this.setView(options.view);\n    }\n\n    // StateMixin\n    this._initState(options);\n\n    // ViewEventMixin\n    this._buildEventProxies();\n\n    this.triggerMethod('before:start', options);\n\n    this._isRunning = true;\n\n    this._bindRunningEvents();\n\n    this.triggerStart(options);\n\n    return this;\n  },\n\n  /**\n   * Sets up region, view, and state events.\n   * To only be called after `isRunning` is true\n   *\n   * @private\n   * @method _bindRunningEvents\n   * @memberOf App\n   */\n  _bindRunningEvents() {\n    if(this._region) {\n      this._regionEventMonitor();\n    }\n\n    if(this._view) {\n      this._proxyViewEvents(this._view);\n    }\n\n    // StateMixin\n    this.delegateStateEvents();\n  },\n\n  /**\n   * Sets the app lifecycle to not running\n   * then sets the app lifecycle to running with ending state\n   *\n   * @public\n   * @method restart\n   * @memberOf App\n   * @returns {App}\n   */\n  restart() {\n    const state = this.getState().attributes;\n\n    this._isRestarting = true;\n    this.stop().start({ state });\n    this._isRestarting = false;\n\n    return this;\n  },\n\n  /**\n   * Starts children and triggers start event\n   * For calling within `triggerStart`\n   *\n   * @public\n   * @method finallyStart\n   * @memberOf App\n   * @event App#start - passes any arguments\n   * @returns\n   */\n  finallyStart() {\n    this._startChildApps();\n    this.triggerMethod('start', ...arguments);\n  },\n\n  /**\n   * Triggers start event via finallyStart.\n   * Override to introduce async start\n   *\n   * @public\n   * @method triggerStart\n   * @memberOf App\n   * @param {Object} [options] - Settings for the App passed through to events\n   * @returns\n   */\n  triggerStart(options) {\n    this.finallyStart(options);\n  },\n\n  /**\n   * Sets the app lifecycle to not running.\n   * Removes any listeners added during the running state\n   *\n   * @public\n   * @method stop\n   * @memberOf App\n   * @param {Object} [options] - Settings for the App passed through to events\n   * @event App#before:stop - passes options\n   * @event App#stop - passes options\n   * @returns {App}\n   */\n  stop(options) {\n    if(!this._isRunning) {\n      return this;\n    }\n\n    this.triggerMethod('before:stop', options);\n\n    this._stopChildApps();\n\n    this._isRunning = false;\n\n    this.triggerMethod('stop', options);\n\n    // Running events are cleaned up after stop so that\n    // `stop` event handlers still fire\n    this._stopRunningListeners();\n    this._stopRunningEvents();\n\n    return this;\n  },\n\n  /**\n   * Stops the `App` and sets it destroyed.\n   *\n   * @public\n   * @method destroy\n   * @memberOf App\n   */\n  destroy() {\n    if(this._isDestroyed) {\n      return this;\n    }\n\n    this.stop();\n\n    this._removeView();\n\n    this._destroyChildApps();\n\n    Application.prototype.destroy.apply(this, arguments);\n\n    return this;\n  },\n\n  /**\n   * Set the Application's Region\n   *\n   * @public\n   * @method setRegion\n   * @memberOf App\n   * @param {Region} [region] - Region to use with the app\n   * @returns {Region}\n   */\n  setRegion(region) {\n    if(this._region) {\n      this.stopListening(this._region);\n    }\n\n    this._region = region;\n\n    if(region.currentView) {\n      this.setView(region.currentView);\n    }\n\n    if(this._isRunning) {\n      this._regionEventMonitor();\n    }\n\n    return region;\n  },\n\n  /**\n   * Monitors the apps region before:show event so the region's view\n   * is available to the app\n   *\n   * @private\n   * @method _regionEventMonitor\n   * @memberOf App\n   */\n  _regionEventMonitor() {\n    this.listenTo(this._region, {\n      'before:show': this._onBeforeShow,\n      'empty': this._onEmpty\n    });\n  },\n\n  /**\n   * Region monitor handler which sets the app's view to the region's view\n   *\n   * @private\n   * @method _onBeforeShow\n   * @memberOf App\n   */\n  _onBeforeShow(region, view) {\n    this.setView(view);\n  },\n\n  /**\n   * Region monitor handler which empties the region's view\n   *\n   * @private\n   * @method _onEmpty\n   * @memberOf App\n   */\n  _onEmpty(region, view) {\n    if(view !== this._view) return;\n\n    this._removeView();\n  },\n\n  /**\n   * Region monitor handler which deletes the region's view and listeners to view\n   *\n   * @private\n   * @method _removeView\n   * @memberOf App\n   */\n  _removeView() {\n    if(this._view) {\n      this.stopListening(this._view);\n      delete this._view;\n    }\n  },\n\n  /**\n   * Get the Application's Region or\n   * Get a region from the Application's View\n   *\n   * @public\n   * @method getRegion\n   * @memberOf App\n   * @param {String} [regionName] - Optional regionName to get from the view\n   * @returns {Region}\n   */\n  getRegion(regionName) {\n    if(!regionName) {\n      return this._region;\n    }\n\n    return this.getView().getRegion(regionName);\n  },\n\n  /**\n   * Set the Application's View\n   *\n   * @public\n   * @method setView\n   * @memberOf App\n   * @param {View} [view] - View to use with the app\n   * @returns {View}\n   */\n  setView(view) {\n    if(this._view === view) {\n      return view;\n    }\n\n    if(this._view) {\n      this.stopListening(this._view);\n    }\n\n    this._view = view;\n\n    // ViewEventsMixin\n    if(this._isRunning) {\n      this._proxyViewEvents(view);\n    }\n\n    // Internal non-running listener\n    this._listenTo(this._view, 'destroy', this._removeView);\n\n    return view;\n  },\n\n  /**\n   * Get the Application's View\n   *\n   * @public\n   * @method getView\n   * @memberOf App\n   * @returns {View}\n   */\n  getView() {\n    return this._view || this._region && this._region.currentView;\n  },\n\n  /**\n   * Shows a view in the Application's region\n   *\n   * @public\n   * @method showView\n   * @param {View} view - Child view instance defaults to App's view\n   * @param {...args} Additional args that get passed along\n   * @returns {View}\n   */\n  showView(view = this._view, ...args) {\n    this.getRegion().show(view, ...args);\n\n    return view;\n  },\n\n  /**\n   * Shows a view in the region of the app's view\n   *\n   * @public\n   * @method showChildView\n   * @param {String} regionName - Name of region to show in\n   * @param {View} view - Child view instance\n   * @param {...args} Additional args that get passed along\n   * @returns {View} - Child view instance\n   */\n  showChildView(regionName, view, ...args) {\n    this.getView().showChildView(regionName, view, ...args);\n\n    return view;\n  },\n\n  /**\n   * Returns view from the App view by region name.\n   *\n   * @public\n   * @method getChildView\n   * @param {String} regionName - Name of region to get view from\n   * @returns {View}\n   */\n  getChildView(regionName) {\n    return this.getView().getChildView(regionName);\n  }\n});\n\n_.extend(App.prototype, StateMixin, ChildAppsMixin, EventListenersMixin, ViewEventsMixin);\n\nexport default App;\n","import _ from 'underscore';\nimport Backbone from 'backbone';\nimport { Application, View } from 'backbone.marionette';\nimport StateMixin from './mixins/state';\nimport ViewEventsMixin from './mixins/view-events';\n\nconst ClassOptions = [\n  'ViewClass',\n  'viewEventPrefix',\n  'viewEvents',\n  'viewTriggers',\n  'viewOptions'\n];\n\n/**\n * Reusable Marionette.MnObject with View management boilerplate\n *\n * @public\n * @class Component\n * @memberOf Toolkit\n * @memberOf Marionette\n */\nconst Component = Application.extend({\n\n  /**\n   * The view class to be managed.\n   * @type {Mn.View|Mn.CollectionView}\n   * @default Marionette.View\n   */\n  ViewClass: View,\n\n  /**\n   * @public\n   * @constructs Component\n   * @param {Object} [options] - Settings for the component.\n   * @param {Object} [options.state] - Attributes to set on the state model.\n   * @param {Mn.View|Mn.CollectionView} [options.ViewClass]\n   * - The view class to be managed.\n   * @param {String} [options.viewEventPrefix]\n   * - Used as the prefix for events forwarded from the component's view to the component\n   * @param {Object} [options.viewOptions] - Options hash passed to an instantiated ViewClass.\n   * @param {Marionette.Region} [options.region] - The region to show the component in.\n   */\n  constructor(options = {}) {\n    // Make defaults available to this\n    this.mergeOptions(options, ClassOptions);\n\n    this.options = _.extend({}, _.result(this, 'options'), options);\n\n    // ViewEventMixin\n    this._buildEventProxies();\n\n    // StateMixin\n    this._initState(options);\n\n    Application.call(this, options);\n\n    // StateMixin\n    this.delegateStateEvents();\n  },\n\n  /**\n   * Set the Component's region and then show it.\n   *\n   * @public\n   * @method showIn\n   * @memberOf Component\n   * @param {Marionette.Region} region - The region for the component\n   * @param {Object} [viewOptions] - Options hash mixed into the instantiated ViewClass.\n   * @returns {Component}\n   */\n  showIn(region, viewOptions) {\n    this._region = region;\n\n    this.show(viewOptions);\n\n    return this;\n  },\n\n  /**\n   * Show the Component in its region.\n   *\n   * @public\n   * @event Component#before:show\n   * @event Component#show\n   * @throws ComponentRegionError - Thrown if component has no defined region.\n   * @method show\n   * @param {Object} [viewOptions] - Options hash mixed into the instantiated ViewClass.\n   * @param {Object} [regionOptions] - Options hash passed to the region on show.\n   * @memberOf Component\n   * @returns {Component}\n   */\n  show(viewOptions, regionOptions) {\n    const region = this.getRegion();\n\n    if(!region) {\n      throw new Error('Component has no defined region.');\n    }\n\n    const view = this._getView(viewOptions);\n\n    this.stopListening(region.currentView, 'destroy', this.destroy);\n\n    this.triggerMethod('before:show', this, view, viewOptions, regionOptions);\n\n    this.showView(view, regionOptions);\n\n    this.listenTo(region.currentView, 'destroy', this.destroy);\n\n    this.triggerMethod('show', this, view, viewOptions, regionOptions);\n\n    return this;\n  },\n\n  /**\n   * Empty the Components region without destroying it\n   *\n   * @public\n   * @throws ComponentRegionError - Thrown if component has no defined region.\n   * @method empty\n   * @memberOf Component\n   * @returns {Component}\n   */\n  empty() {\n    const region = this.getRegion();\n\n    if(!region) {\n      throw new Error('Component has no defined region.');\n    }\n\n    this.stopListening(region.currentView, 'destroy', this.destroy);\n\n    region.empty();\n\n    return this;\n  },\n\n  /**\n   * Get the Component view instance.\n   *\n   * @private\n   * @method _getView\n   * @memberOf Component\n   * @param {Object} [options] - Options that can be used to determine the ViewClass.\n   * @returns {View}\n   */\n  _getView(options) {\n    const ViewClass = this._getViewClass(options);\n\n    const viewOptions = this.mixinOptions(options);\n\n    const view = this.buildView(ViewClass, viewOptions);\n\n    // ViewEventMixin\n    this._proxyViewEvents(view);\n\n    return view;\n  },\n\n  /**\n   * Get the Component ViewClass class.\n   * Checks if the `ViewClass` is a view class (the common case)\n   * Then check if it's a function (which we assume that returns a view class)\n   *\n   * @private\n   * @method _getViewClass\n   * @memberOf Component\n   * @param {Object} [options] - Options that can be used to determine the ViewClass.\n   * @returns {View}\n   */\n  _getViewClass(options = {}) {\n    const ViewClass = this.ViewClass;\n\n    if(ViewClass.prototype instanceof Backbone.View || ViewClass === Backbone.View) {\n      return ViewClass;\n    } else if(_.isFunction(ViewClass)) {\n      return ViewClass.call(this, options);\n    }\n\n    throw new Error('\"ViewClass\" must be a view class or a function that returns a view class');\n  },\n\n  /**\n   * Mixin initial State with any other viewOptions\n   *\n   * @public\n   * @abstract\n   * @method mixinOptions\n   * @memberOf Component\n   * @param {Object} [options] - Additional options to mixin\n   * @returns {Object}\n   */\n  mixinOptions(options) {\n    const viewOptions = _.result(this, 'viewOptions');\n\n    return _.extend({ state: this.getState().attributes }, viewOptions, options);\n  },\n\n  /**\n   * Builds the view class with options\n   * If you need a dynamic ViewClass override this function\n   *\n   * @public\n   * @abstract\n   * @method buildView\n   * @memberOf Component\n   * @param {Mn.View|Mn.CollectionView} ViewClass -\n   * The view class to instantiate.\n   * @param {Object} [viewOptions] - Options to pass to the View\n   * @returns {Mn.View|Mn.CollectionView}\n   */\n  buildView(ViewClass, viewOptions) {\n    return new ViewClass(viewOptions);\n  },\n\n  /**\n   * Empty the region and destroy the component.\n   *\n   * @public\n   * @method destroy\n   * @param {Object} [options] - Options passed to Mn.Application `destroy`\n   * @memberOf Component\n   */\n  destroy() {\n    if(this._isDestroyed) {\n      return this;\n    }\n\n    const region = this.getRegion();\n    if(region) region.empty();\n\n    Application.prototype.destroy.apply(this, arguments);\n\n    return this;\n  }\n}, {\n  /**\n   * Sets the region for a Component Class\n   *\n   * @public\n   * @method setRegion\n   * @param {Marionette.Region} - region definition for instantiated components\n   * @memberOf Component.prototype\n   */\n  setRegion(region) {\n    this.prototype.region = region;\n  }\n});\n\n_.extend(Component.prototype, StateMixin, ViewEventsMixin);\n\nexport default Component;\n","import _ from 'underscore';\n\nimport StateMixin from './mixins/state';\nimport App from './app';\nimport Component from './component';\n\nimport { version as VERSION } from '../package.json';\n\n/**\n * @module Toolkit\n */\n\nfunction MixinState(classDefinition) {\n  let _StateMixin = StateMixin;\n\n  if(classDefinition.prototype.StateModel) {\n    _StateMixin = _.omit(StateMixin, 'StateModel');\n  }\n\n  _.extend(classDefinition.prototype, _StateMixin);\n}\n\nexport {\n  MixinState,\n  VERSION,\n  StateMixin,\n  App,\n  Component\n};\n"],"names":["ClassOptions","StateModel","Backbone","Model","initState","options","_initState","delegateStateEvents","mergeOptions","_removeEventHandlers","_getStateModel","_stateModel","state","_setEventHandlers","undelegateStateEvents","bindEvents","_","result","unbindEvents","on","_destroyState","stopListening","off","prototype","isFunction","call","Error","setState","set","apply","arguments","resetStateDefaults","defaults","getState","attr","get","toggleState","val","length","hasState","has","_initChildApps","_childApps","childApps","addChildApps","_getChildStartOpts","childApp","tkOpts","_tkOpts","opts","region","getRegion","regionName","each","getOptions","opt","getOption","_startChildApp","start","extend","_shouldActWithRestart","action","_isRestarting","restartWithParent","_startChildApps","_stopChildApps","stop","startChildApp","appName","getChildApp","stopChildApp","_destroyChildApps","destroy","_buildAppFromObject","appConfig","AppClass","omit","app","buildApp","pick","_buildApp","isObject","childAppOptions","_ensureAppIsUnique","bind","addChildApp","_name","_on","partial","_removeChildApp","isRunning","getName","getChildApps","clone","removeChildApps","removeChildApp","preventDestroy","_stopRunningEvents","_runningEvents","args","_stopRunningListeners","_runningListeningTo","_isRunning","push","MnObject","listenTo","_listenTo","listenToOnce","viewEventPrefix","_buildEventProxies","viewEvents","_viewEvents","normalizeMethods","_viewTriggers","_viewEventPrefix","_proxyViewEvents","view","_childViewEventHandler","eventName","viewTriggers","isString","triggerMethod","prefix","viewEventName","App","Application","startAfterInitialized","startWithParent","stopWithParent","constructor","_ensureAppIsIntact","_isDestroyed","isRestarting","setRegion","setView","_bindRunningEvents","triggerStart","_region","_regionEventMonitor","_view","restart","attributes","finallyStart","_removeView","currentView","_onBeforeShow","_onEmpty","getView","showView","show","showChildView","getChildView","StateMixin","ChildAppsMixin","EventListenersMixin","ViewEventsMixin","Component","ViewClass","View","showIn","viewOptions","regionOptions","_getView","empty","_getViewClass","mixinOptions","buildView","MixinState","classDefinition","_StateMixin"],"mappings":"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"}