/**
 * marionette.toolkit - A collection of opinionated Backbone.Marionette extensions for large scale application architecture.
 * @version v0.4.0
 * @link https://github.com/RoundingWellOS/marionette.toolkit
 * @license MIT
 */
"use strict";var _=require("underscore"),Backbone=require("backbone"),Marionette=require("backbone.marionette"),StateClass=Marionette.Object.extend({StateModel:Backbone.Model,constructor:function(t){t=t||{},_.extend(this,_.pick(t,["StateModel","stateEvents","stateDefaults"]));var e=this._getStateModel(t);this._stateModel=new e(_.result(this,"stateDefaults")),this.bindEntityEvents(this._stateModel,_.result(this,"stateEvents")),Marionette.Object.call(this,t)},_getStateModel:function(t){var e=this.getOption("StateModel");if(e.prototype instanceof Backbone.Model||e===Backbone.Model)return e;if(_.isFunction(e))return e.call(this,t);throw new Marionette.Error({name:"InvalidStateModelError",message:'"StateModel" must be a model class or a function that returns a model class'})},setState:function(){return this._stateModel.set.apply(this._stateModel,arguments)},getState:function(t){return t?this._stateModel.get.apply(this._stateModel,arguments):this._stateModel},destroy:function(){this._stateModel.stopListening(),Marionette.Object.prototype.destroy.apply(this,arguments)}}),state_class=StateClass;module.exports=state_class;
//# sourceMappingURL=StateClass.min.js.map